# /etc/nginx/nginx.conf
# Global nginx configuration tuned for reverse proxy

user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
  worker_connections  1024;
}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  sendfile        on;
  tcp_nopush      on;
  tcp_nodelay     on;
  keepalive_timeout  65;
  types_hash_max_size 2048;

  # Real IP / forwarded headers (if you later sit behind another proxy)
  # Uncomment & configure if using a load balancer in front:
  # set_real_ip_from  0.0.0.0/0;
  # real_ip_header    X-Forwarded-For;
  # real_ip_recursive on;

  # Logging formats
  log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                  '$status $body_bytes_sent "$http_referer" "$http_user_agent" '
                  '"$http_x_forwarded_for"';
  access_log /var/log/nginx/access.log main;

  # Common proxy settings (include WebSocket support)
  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }

  # Tune proxy buffers/timeouts for dev
  proxy_read_timeout 300s;
  proxy_send_timeout 300s;
  proxy_connect_timeout 15s;

  # Upstreams to internal container IP (dev app)
  upstream app_3000 {
    server 172.20.0.6:3000;
  }
  upstream app_8000 {
    server 172.20.0.6:8000;
  }
  upstream app_5555 {
    server 172.20.0.6:5555;
  }

  # Base server template (reused per port)
  # Note: separate access logs for easier analysis

  server {
    listen 3000;
    server_name _;

    access_log /var/log/nginx/access_3000.log main;

    # If you need CORS for APIs in dev, consider adding headers here
    # add_header Access-Control-Allow-Origin "*" always;

    location / {
      proxy_pass http://app_3000;
      proxy_http_version 1.1;

      # Forwarded headers for app awareness
      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      # WebSocket upgrade
      proxy_set_header Upgrade           $http_upgrade;
      proxy_set_header Connection        $connection_upgrade;
    }
  }

  server {
    listen 8000;
    server_name _;

    access_log /var/log/nginx/access_8000.log main;

    location / {
      proxy_pass http://app_8000;
      proxy_http_version 1.1;

      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      proxy_set_header Upgrade           $http_upgrade;
      proxy_set_header Connection        $connection_upgrade;
    }
  }

  server {
    listen 5555;
    server_name _;

    access_log /var/log/nginx/access_5555.log main;

    location / {
      proxy_pass http://app_5555;
      proxy_http_version 1.1;

      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      proxy_set_header Upgrade           $http_upgrade;
      proxy_set_header Connection        $connection_upgrade;
    }
  }

  # Health endpoint (served locally; not proxied)
  include /etc/nginx/conf.d/health.conf;
}
